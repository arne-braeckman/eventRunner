{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///Users/arnebraeckman/Documents/GitHub/eventRunner/src/lib/utils.ts"],"sourcesContent":["import { type ClassValue, clsx } from \"clsx\"\nimport { twMerge } from \"tailwind-merge\"\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs))\n}"],"names":[],"mappings":";;;AAAA;AACA;;;AAEO,SAAS;IAAG,IAAA,IAAA,OAAA,UAAA,QAAA,AAAG,SAAH,UAAA,OAAA,OAAA,GAAA,OAAA,MAAA;QAAG,OAAH,QAAA,SAAA,CAAA,KAAuB;;IACxC,OAAO,CAAA,GAAA,8JAAA,CAAA,UAAO,AAAD,EAAE,CAAA,GAAA,wIAAA,CAAA,OAAI,AAAD,EAAE;AACtB","debugId":null}},
    {"offset": {"line": 29, "column": 0}, "map": {"version":3,"sources":["file:///Users/arnebraeckman/Documents/GitHub/eventRunner/src/components/ui/card.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { cn } from \"@/lib/utils\"\n\nconst Card = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"rounded-lg border bg-card text-card-foreground shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n))\nCard.displayName = \"Card\"\n\nconst CardHeader = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"flex flex-col space-y-1.5 p-6\", className)} {...props} />\n))\nCardHeader.displayName = \"CardHeader\"\n\nconst CardTitle = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLHeadingElement>\n>(({ className, ...props }, ref) => (\n  <h3\n    ref={ref}\n    className={cn(\n      \"text-2xl font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nCardTitle.displayName = \"CardTitle\"\n\nconst CardDescription = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, ...props }, ref) => (\n  <p\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nCardDescription.displayName = \"CardDescription\"\n\nconst CardContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\n))\nCardContent.displayName = \"CardContent\"\n\nconst CardFooter = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"flex items-center p-6 pt-0\", className)} {...props} />\n))\nCardFooter.displayName = \"CardFooter\"\n\nexport { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent }"],"names":[],"mappings":";;;;;;;;;AAAA;AACA;;;;AAEA,MAAM,qBAAO,6JAAA,CAAA,aAAgB,MAG3B,QAA0B;QAAzB,EAAE,SAAS,EAAE,GAAG,OAAO;yBACxB,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,4DACA;QAED,GAAG,KAAK;;;;;;;;AAGb,KAAK,WAAW,GAAG;AAEnB,MAAM,2BAAa,6JAAA,CAAA,aAAgB,OAGjC,QAA0B;QAAzB,EAAE,SAAS,EAAE,GAAG,OAAO;yBACxB,6LAAC;QAAI,KAAK;QAAK,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAAa,GAAG,KAAK;;;;;;;;AAErF,WAAW,WAAW,GAAG;AAEzB,MAAM,0BAAY,6JAAA,CAAA,aAAgB,OAGhC,QAA0B;QAAzB,EAAE,SAAS,EAAE,GAAG,OAAO;yBACxB,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,sDACA;QAED,GAAG,KAAK;;;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,gCAAkB,6JAAA,CAAA,aAAgB,OAGtC,QAA0B;QAAzB,EAAE,SAAS,EAAE,GAAG,OAAO;yBACxB,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;;;AAGb,gBAAgB,WAAW,GAAG;AAE9B,MAAM,4BAAc,6JAAA,CAAA,aAAgB,OAGlC,QAA0B;QAAzB,EAAE,SAAS,EAAE,GAAG,OAAO;yBACxB,6LAAC;QAAI,KAAK;QAAK,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,YAAY;QAAa,GAAG,KAAK;;;;;;;;AAEhE,YAAY,WAAW,GAAG;AAE1B,MAAM,2BAAa,6JAAA,CAAA,aAAgB,QAGjC,QAA0B;QAAzB,EAAE,SAAS,EAAE,GAAG,OAAO;yBACxB,6LAAC;QAAI,KAAK;QAAK,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAAa,GAAG,KAAK;;;;;;;;AAElF,WAAW,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 150, "column": 0}, "map": {"version":3,"sources":["file:///Users/arnebraeckman/Documents/GitHub/eventRunner/src/components/ui/badge.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\nimport { cn } from \"@/lib/utils\"\n\nconst badgeVariants = cva(\n  \"inline-flex items-center rounded-full border px-2.5 py-0.5 text-xs font-semibold transition-colors focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"border-transparent bg-primary text-primary-foreground hover:bg-primary/80\",\n        secondary:\n          \"border-transparent bg-secondary text-secondary-foreground hover:bg-secondary/80\",\n        destructive:\n          \"border-transparent bg-destructive text-destructive-foreground hover:bg-destructive/80\",\n        outline: \"text-foreground\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nexport interface BadgeProps\n  extends React.HTMLAttributes<HTMLDivElement>,\n    VariantProps<typeof badgeVariants> {}\n\nfunction Badge({ className, variant, ...props }: BadgeProps) {\n  return (\n    <div className={cn(badgeVariants({ variant }), className)} {...props} />\n  )\n}\n\nexport { Badge, badgeVariants }"],"names":[],"mappings":";;;;;AACA;AACA;;;;AAEA,MAAM,gBAAgB,CAAA,GAAA,mKAAA,CAAA,MAAG,AAAD,EACtB,0KACA;IACE,UAAU;QACR,SAAS;YACP,SACE;YACF,WACE;YACF,aACE;YACF,SAAS;QACX;IACF;IACA,iBAAiB;QACf,SAAS;IACX;AACF;AAOF,SAAS,MAAM,KAA4C;QAA5C,EAAE,SAAS,EAAE,OAAO,EAAE,GAAG,OAAmB,GAA5C;IACb,qBACE,6LAAC;QAAI,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,cAAc;YAAE;QAAQ,IAAI;QAAa,GAAG,KAAK;;;;;;AAExE;KAJS","debugId":null}},
    {"offset": {"line": 199, "column": 0}, "map": {"version":3,"sources":["file:///Users/arnebraeckman/Documents/GitHub/eventRunner/src/components/ui/button.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\nimport { cn } from \"@/lib/utils\"\n\nconst buttonVariants = cva(\n  \"inline-flex items-center justify-center whitespace-nowrap rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-primary text-primary-foreground hover:bg-primary/90\",\n        destructive:\n          \"bg-destructive text-destructive-foreground hover:bg-destructive/90\",\n        outline:\n          \"border border-input bg-background hover:bg-accent hover:text-accent-foreground\",\n        secondary:\n          \"bg-secondary text-secondary-foreground hover:bg-secondary/80\",\n        ghost: \"hover:bg-accent hover:text-accent-foreground\",\n        link: \"text-primary underline-offset-4 hover:underline\",\n      },\n      size: {\n        default: \"h-10 px-4 py-2\",\n        sm: \"h-9 rounded-md px-3\",\n        lg: \"h-11 rounded-md px-8\",\n        icon: \"h-10 w-10\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nexport interface ButtonProps\n  extends React.ButtonHTMLAttributes<HTMLButtonElement>,\n    VariantProps<typeof buttonVariants> {\n  asChild?: boolean\n}\n\nconst Button = React.forwardRef<HTMLButtonElement, ButtonProps>(\n  ({ className, variant, size, asChild = false, ...props }, ref) => {\n    return (\n      <button\n        className={cn(buttonVariants({ variant, size, className }))}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nButton.displayName = \"Button\"\n\nexport { Button, buttonVariants }"],"names":[],"mappings":";;;;;AAAA;AACA;AACA;;;;;AAEA,MAAM,iBAAiB,CAAA,GAAA,mKAAA,CAAA,MAAG,AAAD,EACvB,0RACA;IACE,UAAU;QACR,SAAS;YACP,SAAS;YACT,aACE;YACF,SACE;YACF,WACE;YACF,OAAO;YACP,MAAM;QACR;QACA,MAAM;YACJ,SAAS;YACT,IAAI;YACJ,IAAI;YACJ,MAAM;QACR;IACF;IACA,iBAAiB;QACf,SAAS;QACT,MAAM;IACR;AACF;AASF,MAAM,uBAAS,6JAAA,CAAA,aAAgB,MAC7B,QAA0D;QAAzD,EAAE,SAAS,EAAE,OAAO,EAAE,IAAI,EAAE,UAAU,KAAK,EAAE,GAAG,OAAO;IACtD,qBACE,6LAAC;QACC,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,eAAe;YAAE;YAAS;YAAM;QAAU;QACxD,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;;AAEF,OAAO,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 264, "column": 0}, "map": {"version":3,"sources":["file:///Users/arnebraeckman/Documents/GitHub/eventRunner/src/components/ui/select.tsx"],"sourcesContent":["import * as React from \"react\"\nimport * as SelectPrimitive from \"@radix-ui/react-select\"\nimport { Check, ChevronDown, ChevronUp } from \"lucide-react\"\nimport { cn } from \"@/lib/utils\"\n\nconst Select = SelectPrimitive.Root\n\nconst SelectGroup = SelectPrimitive.Group\n\nconst SelectValue = SelectPrimitive.Value\n\nconst SelectTrigger = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Trigger>\n>(({ className, children, ...props }, ref) => (\n  <SelectPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      \"flex h-10 w-full items-center justify-between rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background placeholder:text-muted-foreground focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 [&>span]:line-clamp-1\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <SelectPrimitive.Icon asChild>\n      <ChevronDown className=\"h-4 w-4 opacity-50\" />\n    </SelectPrimitive.Icon>\n  </SelectPrimitive.Trigger>\n))\nSelectTrigger.displayName = SelectPrimitive.Trigger.displayName\n\nconst SelectScrollUpButton = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.ScrollUpButton>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollUpButton>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.ScrollUpButton\n    ref={ref}\n    className={cn(\n      \"flex cursor-default items-center justify-center py-1\",\n      className\n    )}\n    {...props}\n  >\n    <ChevronUp className=\"h-4 w-4\" />\n  </SelectPrimitive.ScrollUpButton>\n))\nSelectScrollUpButton.displayName = SelectPrimitive.ScrollUpButton.displayName\n\nconst SelectScrollDownButton = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.ScrollDownButton>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollDownButton>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.ScrollDownButton\n    ref={ref}\n    className={cn(\n      \"flex cursor-default items-center justify-center py-1\",\n      className\n    )}\n    {...props}\n  >\n    <ChevronDown className=\"h-4 w-4\" />\n  </SelectPrimitive.ScrollDownButton>\n))\nSelectScrollDownButton.displayName =\n  SelectPrimitive.ScrollDownButton.displayName\n\nconst SelectContent = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Content>\n>(({ className, children, position = \"popper\", ...props }, ref) => (\n  <SelectPrimitive.Portal>\n    <SelectPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"relative z-50 max-h-96 min-w-[8rem] overflow-hidden rounded-md border bg-popover text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2\",\n        position === \"popper\" &&\n          \"data-[side=bottom]:translate-y-1 data-[side=left]:-translate-x-1 data-[side=right]:translate-x-1 data-[side=top]:-translate-y-1\",\n        className\n      )}\n      position={position}\n      {...props}\n    >\n      <SelectScrollUpButton />\n      <SelectPrimitive.Viewport\n        className={cn(\n          \"p-1\",\n          position === \"popper\" &&\n            \"h-[var(--radix-select-trigger-height)] w-full min-w-[var(--radix-select-trigger-width)]\"\n        )}\n      >\n        {children}\n      </SelectPrimitive.Viewport>\n      <SelectScrollDownButton />\n    </SelectPrimitive.Content>\n  </SelectPrimitive.Portal>\n))\nSelectContent.displayName = SelectPrimitive.Content.displayName\n\nconst SelectLabel = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Label>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.Label\n    ref={ref}\n    className={cn(\"py-1.5 pl-8 pr-2 text-sm font-semibold\", className)}\n    {...props}\n  />\n))\nSelectLabel.displayName = SelectPrimitive.Label.displayName\n\nconst SelectItem = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Item>\n>(({ className, children, ...props }, ref) => (\n  <SelectPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex w-full cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <SelectPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </SelectPrimitive.ItemIndicator>\n    </span>\n\n    <SelectPrimitive.ItemText>{children}</SelectPrimitive.ItemText>\n  </SelectPrimitive.Item>\n))\nSelectItem.displayName = SelectPrimitive.Item.displayName\n\nconst SelectSeparator = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-muted\", className)}\n    {...props}\n  />\n))\nSelectSeparator.displayName = SelectPrimitive.Separator.displayName\n\nexport {\n  Select,\n  SelectGroup,\n  SelectValue,\n  SelectTrigger,\n  SelectContent,\n  SelectLabel,\n  SelectItem,\n  SelectSeparator,\n  SelectScrollUpButton,\n  SelectScrollDownButton,\n}"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 499, "column": 0}, "map": {"version":3,"sources":["file:///Users/arnebraeckman/Documents/GitHub/eventRunner/src/components/ui/label.tsx"],"sourcesContent":["import * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\nimport { cn } from \"@/lib/utils\"\n\nconst labelVariants = cva(\n  \"text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70\"\n)\n\nconst Label = React.forwardRef<\n  React.ElementRef<typeof LabelPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root> &\n    VariantProps<typeof labelVariants>\n>(({ className, ...props }, ref) => (\n  <LabelPrimitive.Root\n    ref={ref}\n    className={cn(labelVariants(), className)}\n    {...props}\n  />\n))\nLabel.displayName = LabelPrimitive.Root.displayName\n\nexport { Label }"],"names":[],"mappings":";;;;AAAA;AACA;AACA;AACA;;;;;;AAEA,MAAM,gBAAgB,CAAA,GAAA,mKAAA,CAAA,MAAG,AAAD,EACtB;AAGF,MAAM,sBAAQ,6JAAA,CAAA,aAAgB,MAI5B,QAA0B;QAAzB,EAAE,SAAS,EAAE,GAAG,OAAO;yBACxB,6LAAC,oKAAA,CAAA,OAAmB;QAClB,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,iBAAiB;QAC9B,GAAG,KAAK;;;;;;;;AAGb,MAAM,WAAW,GAAG,oKAAA,CAAA,OAAmB,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 540, "column": 0}, "map": {"version":3,"sources":["file:///Users/arnebraeckman/Documents/GitHub/eventRunner/src/components/features/leads/LeadDashboard.tsx"],"sourcesContent":["\"use client\";\n\nimport { useState, useMemo } from 'react';\nimport { useQuery } from \"convex/react\";\nimport { api } from \"../../../../convex/_generated/api\";\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card';\nimport { Badge } from '@/components/ui/badge';\nimport { Button } from '@/components/ui/button';\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from '@/components/ui/select';\nimport { Input } from '@/components/ui/input';\nimport { Label } from '@/components/ui/label';\nimport { \n  BarChart, Bar, LineChart, Line, PieChart, Pie, Cell, XAxis, YAxis, CartesianGrid, \n  Tooltip, Legend, ResponsiveContainer, AreaChart, Area \n} from 'recharts';\nimport { \n  TrendingUpIcon, TrendingDownIcon, UsersIcon, ThermometerIcon, \n  FilterIcon, RefreshCwIcon, DownloadIcon, EyeIcon, MessageSquareIcon,\n  PhoneIcon, CalendarIcon, ExternalLinkIcon\n} from 'lucide-react';\nimport { getLeadHeatColor, getHeatEmoji, getLeadHeatStylesFromScore } from '@/lib/utils/leadHeatCalculator';\nimport type { Contact, LeadSource, LeadHeat, ContactStatus } from '@/lib/types/contact';\n\ninterface DashboardFilters {\n  dateRange: '7d' | '30d' | '90d' | 'all';\n  leadSource?: LeadSource;\n  leadHeat?: LeadHeat;\n  status?: ContactStatus;\n}\n\ninterface LeadMetrics {\n  totalLeads: number;\n  hotLeads: number;\n  warmLeads: number;\n  coldLeads: number;\n  conversionRate: number;\n  avgHeatScore: number;\n  trendsData: Array<{\n    date: string;\n    hot: number;\n    warm: number;\n    cold: number;\n    total: number;\n  }>;\n  sourceDistribution: Array<{\n    source: string;\n    count: number;\n    percentage: number;\n  }>;\n  statusDistribution: Array<{\n    status: string;\n    count: number;\n    percentage: number;\n  }>;\n  heatScoreDistribution: Array<{\n    range: string;\n    count: number;\n  }>;\n  socialEngagementMetrics: {\n    totalInteractions: number;\n    avgInteractionsPerLead: number;\n    topPlatforms: Array<{\n      platform: string;\n      interactions: number;\n    }>;\n    engagementTrend: Array<{\n      date: string;\n      interactions: number;\n    }>;\n  };\n}\n\nconst HEAT_COLORS = {\n  HOT: '#ef4444',\n  WARM: '#f97316', \n  COLD: '#3b82f6'\n};\n\nexport function LeadDashboard() {\n  const [filters, setFilters] = useState<DashboardFilters>({\n    dateRange: '30d'\n  });\n  const [refreshing, setRefreshing] = useState(false);\n\n  // Fetch all contacts for dashboard analytics\n  const allContacts = useQuery(api.contacts.getAllContacts);\n  \n  // Fetch recent interactions for social engagement metrics\n  const recentInteractions = useQuery(api.interactions.getInteractionAnalytics, {\n    startDate: getDateRangeStart(filters.dateRange) ?? undefined,\n    endDate: Date.now()\n  });\n\n  // Calculate dashboard metrics\n  const metrics: LeadMetrics = useMemo(() => {\n    if (!allContacts || !recentInteractions) {\n      return getEmptyMetrics();\n    }\n\n    // Filter contacts based on current filters\n    let filteredContacts = [...allContacts];\n    \n    if (filters.leadSource) {\n      filteredContacts = filteredContacts.filter(c => c.leadSource === filters.leadSource);\n    }\n    if (filters.leadHeat) {\n      filteredContacts = filteredContacts.filter(c => c.leadHeat === filters.leadHeat);\n    }\n    if (filters.status) {\n      filteredContacts = filteredContacts.filter(c => c.status === filters.status);\n    }\n\n    // Filter by date range\n    const dateRangeStart = getDateRangeStart(filters.dateRange);\n    if (dateRangeStart) {\n      filteredContacts = filteredContacts.filter(c => c.createdAt >= dateRangeStart);\n    }\n\n    // Calculate basic metrics\n    const totalLeads = filteredContacts.length;\n    const hotLeads = filteredContacts.filter(c => c.leadHeat === 'HOT').length;\n    const warmLeads = filteredContacts.filter(c => c.leadHeat === 'WARM').length;\n    const coldLeads = filteredContacts.filter(c => c.leadHeat === 'COLD').length;\n    const qualifiedLeads = filteredContacts.filter(c => ['QUALIFIED', 'CUSTOMER'].includes(c.status)).length;\n    const conversionRate = totalLeads > 0 ? (qualifiedLeads / totalLeads) * 100 : 0;\n    const avgHeatScore = totalLeads > 0 \n      ? filteredContacts.reduce((sum, c) => sum + (c.leadHeatScore || 0), 0) / totalLeads \n      : 0;\n\n    // Generate trends data (last 30 days)\n    const trendsData = generateTrendsData(filteredContacts);\n\n    // Calculate source distribution\n    const sourceStats = filteredContacts.reduce((acc, contact) => {\n      acc[contact.leadSource] = (acc[contact.leadSource] || 0) + 1;\n      return acc;\n    }, {} as Record<string, number>);\n\n    const sourceDistribution = Object.entries(sourceStats).map(([source, count]) => ({\n      source,\n      count,\n      percentage: (count / totalLeads) * 100\n    })).sort((a, b) => b.count - a.count);\n\n    // Calculate status distribution\n    const statusStats = filteredContacts.reduce((acc, contact) => {\n      acc[contact.status] = (acc[contact.status] || 0) + 1;\n      return acc;\n    }, {} as Record<string, number>);\n\n    const statusDistribution = Object.entries(statusStats).map(([status, count]) => ({\n      status,\n      count,\n      percentage: (count / totalLeads) * 100\n    })).sort((a, b) => b.count - a.count);\n\n    // Calculate heat score distribution\n    const heatScoreDistribution = [\n      { range: '0-5 (Cold)', count: filteredContacts.filter(c => (c.leadHeatScore || 0) <= 5).length },\n      { range: '6-15 (Warm)', count: filteredContacts.filter(c => (c.leadHeatScore || 0) >= 6 && (c.leadHeatScore || 0) <= 15).length },\n      { range: '16+ (Hot)', count: filteredContacts.filter(c => (c.leadHeatScore || 0) >= 16).length },\n    ];\n\n    // Social engagement metrics\n    const socialEngagementMetrics = {\n      totalInteractions: recentInteractions.totalInteractions || 0,\n      avgInteractionsPerLead: totalLeads > 0 ? (recentInteractions.totalInteractions || 0) / totalLeads : 0,\n      topPlatforms: Object.entries(recentInteractions.interactionsByPlatform || {})\n        .map(([platform, interactions]) => ({ platform, interactions }))\n        .sort((a, b) => b.interactions - a.interactions)\n        .slice(0, 5),\n      engagementTrend: generateEngagementTrend(recentInteractions)\n    };\n\n    return {\n      totalLeads,\n      hotLeads,\n      warmLeads,\n      coldLeads,\n      conversionRate,\n      avgHeatScore,\n      trendsData,\n      sourceDistribution,\n      statusDistribution,\n      heatScoreDistribution,\n      socialEngagementMetrics\n    };\n  }, [allContacts, recentInteractions, filters]);\n\n  const handleRefresh = async () => {\n    setRefreshing(true);\n    // Simulate refresh delay\n    await new Promise(resolve => setTimeout(resolve, 1000));\n    setRefreshing(false);\n  };\n\n  const exportData = () => {\n    // Create CSV export functionality\n    const csvData = allContacts?.map(contact => ({\n      Name: contact.name,\n      Email: contact.email,\n      Company: contact.company || '',\n      'Lead Source': contact.leadSource,\n      'Lead Heat': contact.leadHeat,\n      'Heat Score': contact.leadHeatScore || 0,\n      Status: contact.status,\n      'Created At': new Date(contact.createdAt).toLocaleDateString()\n    }));\n\n    if (csvData) {\n      downloadCSV(csvData, 'lead-dashboard-export.csv');\n    }\n  };\n\n  if (!allContacts || !recentInteractions) {\n    return <DashboardSkeleton />;\n  }\n\n  return (\n    <div className=\"space-y-6\">\n      {/* Header */}\n      <div className=\"flex flex-col sm:flex-row sm:items-center sm:justify-between gap-4\">\n        <div>\n          <h1 className=\"text-2xl font-bold text-gray-900\">Lead Dashboard</h1>\n          <p className=\"text-gray-600\">Comprehensive lead analytics and heat visualization</p>\n        </div>\n        <div className=\"flex gap-2\">\n          <Button variant=\"outline\" onClick={handleRefresh} disabled={refreshing}>\n            <RefreshCwIcon className={`h-4 w-4 mr-2 ${refreshing ? 'animate-spin' : ''}`} />\n            Refresh\n          </Button>\n          <Button variant=\"outline\" onClick={exportData}>\n            <DownloadIcon className=\"h-4 w-4 mr-2\" />\n            Export\n          </Button>\n        </div>\n      </div>\n\n      {/* Filters */}\n      <Card>\n        <CardHeader>\n          <CardTitle className=\"flex items-center gap-2\">\n            <FilterIcon className=\"h-5 w-5\" />\n            Dashboard Filters\n          </CardTitle>\n        </CardHeader>\n        <CardContent>\n          <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-4\">\n            <div className=\"space-y-2\">\n              <Label>Date Range</Label>\n              <Select\n                value={filters.dateRange}\n                onValueChange={(value) => setFilters(prev => ({ \n                  ...prev, \n                  dateRange: value as DashboardFilters['dateRange'] \n                }))}\n              >\n                <SelectTrigger>\n                  <SelectValue />\n                </SelectTrigger>\n                <SelectContent>\n                  <SelectItem value=\"7d\">Last 7 days</SelectItem>\n                  <SelectItem value=\"30d\">Last 30 days</SelectItem>\n                  <SelectItem value=\"90d\">Last 90 days</SelectItem>\n                  <SelectItem value=\"all\">All time</SelectItem>\n                </SelectContent>\n              </Select>\n            </div>\n\n            <div className=\"space-y-2\">\n              <Label>Lead Source</Label>\n              <Select\n                value={filters.leadSource || 'all'}\n                onValueChange={(value) => setFilters(prev => ({ \n                  ...prev, \n                  leadSource: value === 'all' ? undefined : value as LeadSource\n                }))}\n              >\n                <SelectTrigger>\n                  <SelectValue />\n                </SelectTrigger>\n                <SelectContent>\n                  <SelectItem value=\"all\">All Sources</SelectItem>\n                  <SelectItem value=\"WEBSITE\">Website</SelectItem>\n                  <SelectItem value=\"FACEBOOK\">Facebook</SelectItem>\n                  <SelectItem value=\"INSTAGRAM\">Instagram</SelectItem>\n                  <SelectItem value=\"LINKEDIN\">LinkedIn</SelectItem>\n                  <SelectItem value=\"REFERRAL\">Referral</SelectItem>\n                  <SelectItem value=\"DIRECT\">Direct</SelectItem>\n                  <SelectItem value=\"OTHER\">Other</SelectItem>\n                </SelectContent>\n              </Select>\n            </div>\n\n            <div className=\"space-y-2\">\n              <Label>Lead Heat</Label>\n              <Select\n                value={filters.leadHeat || 'all'}\n                onValueChange={(value) => setFilters(prev => ({ \n                  ...prev, \n                  leadHeat: value === 'all' ? undefined : value as LeadHeat\n                }))}\n              >\n                <SelectTrigger>\n                  <SelectValue />\n                </SelectTrigger>\n                <SelectContent>\n                  <SelectItem value=\"all\">All Heat Levels</SelectItem>\n                  <SelectItem value=\"HOT\">🔥 Hot</SelectItem>\n                  <SelectItem value=\"WARM\">🌤️ Warm</SelectItem>\n                  <SelectItem value=\"COLD\">❄️ Cold</SelectItem>\n                </SelectContent>\n              </Select>\n            </div>\n\n            <div className=\"space-y-2\">\n              <Label>Status</Label>\n              <Select\n                value={filters.status || 'all'}\n                onValueChange={(value) => setFilters(prev => ({ \n                  ...prev, \n                  status: value === 'all' ? undefined : value as ContactStatus\n                }))}\n              >\n                <SelectTrigger>\n                  <SelectValue />\n                </SelectTrigger>\n                <SelectContent>\n                  <SelectItem value=\"all\">All Statuses</SelectItem>\n                  <SelectItem value=\"UNQUALIFIED\">Unqualified</SelectItem>\n                  <SelectItem value=\"PROSPECT\">Prospect</SelectItem>\n                  <SelectItem value=\"LEAD\">Lead</SelectItem>\n                  <SelectItem value=\"QUALIFIED\">Qualified</SelectItem>\n                  <SelectItem value=\"CUSTOMER\">Customer</SelectItem>\n                  <SelectItem value=\"LOST\">Lost</SelectItem>\n                </SelectContent>\n              </Select>\n            </div>\n          </div>\n        </CardContent>\n      </Card>\n\n      {/* Key Metrics Cards */}\n      <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6\">\n        <MetricCard\n          title=\"Total Leads\"\n          value={metrics.totalLeads}\n          icon={<UsersIcon className=\"h-8 w-8\" />}\n          trend=\"+12%\"\n          trendDirection=\"up\"\n        />\n        <MetricCard\n          title=\"Hot Leads\"\n          value={metrics.hotLeads}\n          icon={<ThermometerIcon className=\"h-8 w-8 text-red-500\" />}\n          trend=\"+8%\"\n          trendDirection=\"up\"\n          color=\"red\"\n        />\n        <MetricCard\n          title=\"Conversion Rate\"\n          value={`${metrics.conversionRate.toFixed(1)}%`}\n          icon={<TrendingUpIcon className=\"h-8 w-8 text-green-500\" />}\n          trend=\"+2.3%\"\n          trendDirection=\"up\"\n          color=\"green\"\n        />\n        <MetricCard\n          title=\"Avg Heat Score\"\n          value={metrics.avgHeatScore.toFixed(1)}\n          icon={<ThermometerIcon className=\"h-8 w-8 text-orange-500\" />}\n          trend=\"+5.2\"\n          trendDirection=\"up\"\n          color=\"orange\"\n        />\n      </div>\n\n      {/* Charts Row 1 */}\n      <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\n        {/* Lead Heat Trends */}\n        <Card>\n          <CardHeader>\n            <CardTitle>Lead Heat Trends</CardTitle>\n            <CardDescription>Lead distribution over time by heat level</CardDescription>\n          </CardHeader>\n          <CardContent>\n            <div style={{ width: '100%', height: 300 }}>\n              <ResponsiveContainer>\n                <AreaChart data={metrics.trendsData}>\n                  <CartesianGrid strokeDasharray=\"3 3\" />\n                  <XAxis dataKey=\"date\" />\n                  <YAxis />\n                  <Tooltip />\n                  <Legend />\n                  <Area \n                    type=\"monotone\" \n                    dataKey=\"hot\" \n                    stackId=\"1\" \n                    stroke={HEAT_COLORS.HOT} \n                    fill={HEAT_COLORS.HOT} \n                    fillOpacity={0.6}\n                    name=\"Hot Leads\"\n                  />\n                  <Area \n                    type=\"monotone\" \n                    dataKey=\"warm\" \n                    stackId=\"1\" \n                    stroke={HEAT_COLORS.WARM} \n                    fill={HEAT_COLORS.WARM} \n                    fillOpacity={0.6}\n                    name=\"Warm Leads\"\n                  />\n                  <Area \n                    type=\"monotone\" \n                    dataKey=\"cold\" \n                    stackId=\"1\" \n                    stroke={HEAT_COLORS.COLD} \n                    fill={HEAT_COLORS.COLD} \n                    fillOpacity={0.6}\n                    name=\"Cold Leads\"\n                  />\n                </AreaChart>\n              </ResponsiveContainer>\n            </div>\n          </CardContent>\n        </Card>\n\n        {/* Lead Source Distribution */}\n        <Card>\n          <CardHeader>\n            <CardTitle>Lead Source Distribution</CardTitle>\n            <CardDescription>Where your leads are coming from</CardDescription>\n          </CardHeader>\n          <CardContent>\n            <div style={{ width: '100%', height: 300 }}>\n              <ResponsiveContainer>\n                <PieChart>\n                  <Pie\n                    data={metrics.sourceDistribution}\n                    cx=\"50%\"\n                    cy=\"50%\"\n                    labelLine={false}\n                    label={(entry) => `${entry.source}: ${entry.count}`}\n                    outerRadius={80}\n                    fill=\"#8884d8\"\n                    dataKey=\"count\"\n                  >\n                    {metrics.sourceDistribution.map((entry, index) => (\n                      <Cell key={`cell-${index}`} fill={getSourceColor(entry.source)} />\n                    ))}\n                  </Pie>\n                  <Tooltip />\n                </PieChart>\n              </ResponsiveContainer>\n            </div>\n          </CardContent>\n        </Card>\n      </div>\n\n      {/* Charts Row 2 */}\n      <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\n        {/* Social Engagement Metrics */}\n        <Card>\n          <CardHeader>\n            <CardTitle>Social Engagement</CardTitle>\n            <CardDescription>Social media interaction trends</CardDescription>\n          </CardHeader>\n          <CardContent>\n            <div className=\"space-y-4\">\n              <div className=\"grid grid-cols-2 gap-4\">\n                <div className=\"text-center\">\n                  <div className=\"text-2xl font-bold text-blue-600\">\n                    {metrics.socialEngagementMetrics.totalInteractions}\n                  </div>\n                  <div className=\"text-sm text-gray-500\">Total Interactions</div>\n                </div>\n                <div className=\"text-center\">\n                  <div className=\"text-2xl font-bold text-green-600\">\n                    {metrics.socialEngagementMetrics.avgInteractionsPerLead.toFixed(1)}\n                  </div>\n                  <div className=\"text-sm text-gray-500\">Avg per Lead</div>\n                </div>\n              </div>\n              \n              <div className=\"space-y-2\">\n                <h4 className=\"text-sm font-medium\">Top Platforms:</h4>\n                {metrics.socialEngagementMetrics.topPlatforms.map((platform, index) => (\n                  <div key={platform.platform} className=\"flex items-center justify-between\">\n                    <span className=\"text-sm\">{platform.platform}</span>\n                    <Badge variant=\"secondary\">{platform.interactions}</Badge>\n                  </div>\n                ))}\n              </div>\n            </div>\n          </CardContent>\n        </Card>\n\n        {/* Heat Score Distribution */}\n        <Card>\n          <CardHeader>\n            <CardTitle>Heat Score Distribution</CardTitle>\n            <CardDescription>Distribution of lead heat scores</CardDescription>\n          </CardHeader>\n          <CardContent>\n            <div style={{ width: '100%', height: 300 }}>\n              <ResponsiveContainer>\n                <BarChart data={metrics.heatScoreDistribution}>\n                  <CartesianGrid strokeDasharray=\"3 3\" />\n                  <XAxis dataKey=\"range\" />\n                  <YAxis />\n                  <Tooltip />\n                  <Bar dataKey=\"count\" fill=\"#8884d8\" />\n                </BarChart>\n              </ResponsiveContainer>\n            </div>\n          </CardContent>\n        </Card>\n      </div>\n    </div>\n  );\n}\n\n// Helper Components\ninterface MetricCardProps {\n  title: string;\n  value: string | number;\n  icon: React.ReactNode;\n  trend?: string;\n  trendDirection?: 'up' | 'down';\n  color?: 'red' | 'green' | 'orange' | 'blue';\n}\n\nfunction MetricCard({ title, value, icon, trend, trendDirection, color }: MetricCardProps) {\n  return (\n    <Card>\n      <CardContent className=\"p-6\">\n        <div className=\"flex items-center justify-between\">\n          <div>\n            <p className=\"text-sm font-medium text-gray-600\">{title}</p>\n            <p className=\"text-2xl font-bold\">{value}</p>\n            {trend && (\n              <div className={`flex items-center text-sm ${\n                trendDirection === 'up' ? 'text-green-600' : 'text-red-600'\n              }`}>\n                {trendDirection === 'up' ? \n                  <TrendingUpIcon className=\"h-4 w-4 mr-1\" /> : \n                  <TrendingDownIcon className=\"h-4 w-4 mr-1\" />\n                }\n                {trend}\n              </div>\n            )}\n          </div>\n          <div className={`${getColorClass(color)}`}>\n            {icon}\n          </div>\n        </div>\n      </CardContent>\n    </Card>\n  );\n}\n\nfunction DashboardSkeleton() {\n  return (\n    <div className=\"space-y-6\">\n      <div className=\"h-8 bg-gray-200 rounded w-1/4 animate-pulse\" />\n      <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6\">\n        {[...Array(4)].map((_, i) => (\n          <div key={i} className=\"h-32 bg-gray-200 rounded animate-pulse\" />\n        ))}\n      </div>\n      <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\n        {[...Array(4)].map((_, i) => (\n          <div key={i} className=\"h-80 bg-gray-200 rounded animate-pulse\" />\n        ))}\n      </div>\n    </div>\n  );\n}\n\n// Helper Functions\nfunction getDateRangeStart(range: DashboardFilters['dateRange']): number | null {\n  const now = Date.now();\n  switch (range) {\n    case '7d':\n      return now - (7 * 24 * 60 * 60 * 1000);\n    case '30d':\n      return now - (30 * 24 * 60 * 60 * 1000);\n    case '90d':\n      return now - (90 * 24 * 60 * 60 * 1000);\n    case 'all':\n    default:\n      return null;\n  }\n}\n\nfunction getEmptyMetrics(): LeadMetrics {\n  return {\n    totalLeads: 0,\n    hotLeads: 0,\n    warmLeads: 0,\n    coldLeads: 0,\n    conversionRate: 0,\n    avgHeatScore: 0,\n    trendsData: [],\n    sourceDistribution: [],\n    statusDistribution: [],\n    heatScoreDistribution: [],\n    socialEngagementMetrics: {\n      totalInteractions: 0,\n      avgInteractionsPerLead: 0,\n      topPlatforms: [],\n      engagementTrend: []\n    }\n  };\n}\n\nfunction generateTrendsData(contacts: Contact[]) {\n  // Generate last 30 days of data\n  const days = 30;\n  const now = new Date();\n  const trendsData = [];\n\n  for (let i = days - 1; i >= 0; i--) {\n    const date = new Date(now);\n    date.setDate(date.getDate() - i);\n    const dateStr = date.toISOString().split('T')[0];\n    \n    const dayContacts = contacts.filter(c => {\n      const contactDate = new Date(c.createdAt);\n      return contactDate.toISOString().split('T')[0] === dateStr;\n    });\n\n    trendsData.push({\n      date: date.toLocaleDateString('en-US', { month: 'short', day: 'numeric' }),\n      hot: dayContacts.filter(c => c.leadHeat === 'HOT').length,\n      warm: dayContacts.filter(c => c.leadHeat === 'WARM').length,\n      cold: dayContacts.filter(c => c.leadHeat === 'COLD').length,\n      total: dayContacts.length\n    });\n  }\n\n  return trendsData;\n}\n\nfunction generateEngagementTrend(interactions: any) {\n  // Placeholder for engagement trend data\n  return [];\n}\n\nfunction getSourceColor(source: string): string {\n  const colors: Record<string, string> = {\n    WEBSITE: '#3b82f6',\n    FACEBOOK: '#1877f2',\n    INSTAGRAM: '#e4405f',\n    LINKEDIN: '#0077b5',\n    REFERRAL: '#10b981',\n    DIRECT: '#6366f1',\n    OTHER: '#6b7280'\n  };\n  return colors[source] || '#6b7280';\n}\n\nfunction getColorClass(color?: string): string {\n  switch (color) {\n    case 'red':\n      return 'text-red-500';\n    case 'green':\n      return 'text-green-500';\n    case 'orange':\n      return 'text-orange-500';\n    case 'blue':\n      return 'text-blue-500';\n    default:\n      return 'text-gray-500';\n  }\n}\n\nfunction downloadCSV(data: any[], filename: string) {\n  const csvContent = [\n    Object.keys(data[0]).join(','),\n    ...data.map(row => Object.values(row).join(','))\n  ].join('\\n');\n\n  const blob = new Blob([csvContent], { type: 'text/csv;charset=utf-8;' });\n  const link = document.createElement('a');\n  if (link.download !== undefined) {\n    const url = URL.createObjectURL(blob);\n    link.setAttribute('href', url);\n    link.setAttribute('download', filename);\n    link.style.visibility = 'hidden';\n    document.body.appendChild(link);\n    link.click();\n    document.body.removeChild(link);\n  }\n}"],"names":[],"mappings":"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","debugId":null}}]
}