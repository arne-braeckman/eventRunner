{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 4, "column": 0}, "map": {"version":3,"sources":["turbopack:///[next]/internal/font/google/geist_31c89cc1.module.css [app-rsc] (css module)"],"sourcesContent":["__turbopack_context__.v({\n  \"className\": \"geist_31c89cc1-module__hy39Qq__className\",\n  \"variable\": \"geist_31c89cc1-module__hy39Qq__variable\",\n});\n"],"names":[],"mappings":"AAAA;AACA;AACA;AACA","ignoreList":[0]}},
    {"offset": {"line": 12, "column": 0}, "map": {"version":3,"sources":["turbopack:///[next]/internal/font/google/geist_31c89cc1.js"],"sourcesContent":["import cssModule from \"@vercel/turbopack-next/internal/font/google/cssmodule.module.css?{%22path%22:%22layout.tsx%22,%22import%22:%22Geist%22,%22arguments%22:[{%22subsets%22:[%22latin%22],%22variable%22:%22--font-geist-sans%22}],%22variableName%22:%22geist%22}\";\nconst fontData = {\n    className: cssModule.className,\n    style: {\n        fontFamily: \"'Geist', 'Geist Fallback'\",\n        fontStyle: \"normal\",\n\n    },\n};\n\nif (cssModule.variable != null) {\n    fontData.variable = cssModule.variable;\n}\n\nexport default fontData;\n"],"names":[],"mappings":";;;AAAA;;AACA,MAAM,WAAW;IACb,WAAW,qJAAA,CAAA,UAAS,CAAC,SAAS;IAC9B,OAAO;QACH,YAAY;QACZ,WAAW;IAEf;AACJ;AAEA,IAAI,qJAAA,CAAA,UAAS,CAAC,QAAQ,IAAI,MAAM;IAC5B,SAAS,QAAQ,GAAG,qJAAA,CAAA,UAAS,CAAC,QAAQ;AAC1C;uCAEe","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 40, "column": 0}, "map": {"version":3,"sources":["file:///Users/arnebraeckman/Documents/GitHub/eventRunner/src/trpc/react.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server\";\nexport const TRPCReactProvider = registerClientReference(\n    function() { throw new Error(\"Attempted to call TRPCReactProvider() from the server but TRPCReactProvider is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/trpc/react.tsx <module evaluation>\",\n    \"TRPCReactProvider\",\n);\nexport const api = registerClientReference(\n    function() { throw new Error(\"Attempted to call api() from the server but api is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/trpc/react.tsx <module evaluation>\",\n    \"api\",\n);\n"],"names":[],"mappings":";;;;AAAA;;AACO,MAAM,oBAAoB,CAAA,GAAA,6OAAA,CAAA,0BAAuB,AAAD,EACnD;IAAa,MAAM,IAAI,MAAM;AAAkP,GAC/Q,oDACA;AAEG,MAAM,MAAM,CAAA,GAAA,6OAAA,CAAA,0BAAuB,AAAD,EACrC;IAAa,MAAM,IAAI,MAAM;AAAsN,GACnP,oDACA","debugId":null}},
    {"offset": {"line": 56, "column": 0}, "map": {"version":3,"sources":["file:///Users/arnebraeckman/Documents/GitHub/eventRunner/src/trpc/react.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server\";\nexport const TRPCReactProvider = registerClientReference(\n    function() { throw new Error(\"Attempted to call TRPCReactProvider() from the server but TRPCReactProvider is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/trpc/react.tsx\",\n    \"TRPCReactProvider\",\n);\nexport const api = registerClientReference(\n    function() { throw new Error(\"Attempted to call api() from the server but api is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/trpc/react.tsx\",\n    \"api\",\n);\n"],"names":[],"mappings":";;;;AAAA;;AACO,MAAM,oBAAoB,CAAA,GAAA,6OAAA,CAAA,0BAAuB,AAAD,EACnD;IAAa,MAAM,IAAI,MAAM;AAAkP,GAC/Q,gCACA;AAEG,MAAM,MAAM,CAAA,GAAA,6OAAA,CAAA,0BAAuB,AAAD,EACrC;IAAa,MAAM,IAAI,MAAM;AAAsN,GACnP,gCACA","debugId":null}},
    {"offset": {"line": 72, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 80, "column": 0}, "map": {"version":3,"sources":["file:///Users/arnebraeckman/Documents/GitHub/eventRunner/src/components/providers/ConvexAuthProvider.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server\";\nexport const ConvexClientProvider = registerClientReference(\n    function() { throw new Error(\"Attempted to call ConvexClientProvider() from the server but ConvexClientProvider is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/providers/ConvexAuthProvider.tsx <module evaluation>\",\n    \"ConvexClientProvider\",\n);\n"],"names":[],"mappings":";;;AAAA;;AACO,MAAM,uBAAuB,CAAA,GAAA,6OAAA,CAAA,0BAAuB,AAAD,EACtD;IAAa,MAAM,IAAI,MAAM;AAAwP,GACrR,iFACA","debugId":null}},
    {"offset": {"line": 92, "column": 0}, "map": {"version":3,"sources":["file:///Users/arnebraeckman/Documents/GitHub/eventRunner/src/components/providers/ConvexAuthProvider.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server\";\nexport const ConvexClientProvider = registerClientReference(\n    function() { throw new Error(\"Attempted to call ConvexClientProvider() from the server but ConvexClientProvider is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/providers/ConvexAuthProvider.tsx\",\n    \"ConvexClientProvider\",\n);\n"],"names":[],"mappings":";;;AAAA;;AACO,MAAM,uBAAuB,CAAA,GAAA,6OAAA,CAAA,0BAAuB,AAAD,EACtD;IAAa,MAAM,IAAI,MAAM;AAAwP,GACrR,6DACA","debugId":null}},
    {"offset": {"line": 104, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 112, "column": 0}, "map": {"version":3,"sources":["file:///Users/arnebraeckman/Documents/GitHub/eventRunner/src/app/layout.tsx"],"sourcesContent":["import \"~/styles/globals.css\";\n\nimport { type Metadata } from \"next\";\nimport { Geist } from \"next/font/google\";\nimport {\n  ClerkProvider,\n  SignInButton,\n  SignUpButton,\n  SignedIn,\n  SignedOut,\n  UserButton,\n} from \"@clerk/nextjs\";\n\nimport { TRPCReactProvider } from \"~/trpc/react\";\nimport { ConvexClientProvider } from \"~/components/providers/ConvexAuthProvider\";\n\nexport const metadata: Metadata = {\n  title: \"Create T3 App\",\n  description: \"Generated by create-t3-app\",\n  icons: [{ rel: \"icon\", url: \"/favicon.ico\" }],\n};\n\nconst geist = Geist({\n  subsets: [\"latin\"],\n  variable: \"--font-geist-sans\",\n});\n\nexport default function RootLayout({\n  children,\n}: Readonly<{ children: React.ReactNode }>) {\n  return (\n    <ClerkProvider>\n      <html lang=\"en\" className={`${geist.variable}`}>\n        <body>\n          <header className=\"p-4 border-b\">\n            <SignedOut>\n              <div className=\"flex gap-4\">\n                <SignInButton />\n                <SignUpButton />\n              </div>\n            </SignedOut>\n            <SignedIn>\n              <UserButton />\n            </SignedIn>\n          </header>\n          <ConvexClientProvider>\n            <TRPCReactProvider>{children}</TRPCReactProvider>\n          </ConvexClientProvider>\n        </body>\n      </html>\n    </ClerkProvider>\n  );\n}\n"],"names":[],"mappings":";;;;;;AAIA;AAAA;AASA;AACA;;;;;;;AAEO,MAAM,WAAqB;IAChC,OAAO;IACP,aAAa;IACb,OAAO;QAAC;YAAE,KAAK;YAAQ,KAAK;QAAe;KAAE;AAC/C;AAOe,SAAS,WAAW,EACjC,QAAQ,EACgC;IACxC,qBACE,8OAAC,yKAAA,CAAA,gBAAa;kBACZ,cAAA,8OAAC;YAAK,MAAK;YAAK,WAAW,GAAG,yIAAA,CAAA,UAAK,CAAC,QAAQ,EAAE;sBAC5C,cAAA,8OAAC;;kCACC,8OAAC;wBAAO,WAAU;;0CAChB,8OAAC,yKAAA,CAAA,YAAS;0CACR,cAAA,8OAAC;oCAAI,WAAU;;sDACb,8OAAC,sLAAA,CAAA,eAAY;;;;;sDACb,8OAAC,sLAAA,CAAA,eAAY;;;;;;;;;;;;;;;;0CAGjB,8OAAC,yKAAA,CAAA,WAAQ;0CACP,cAAA,8OAAC,sLAAA,CAAA,aAAU;;;;;;;;;;;;;;;;kCAGf,8OAAC,qJAAA,CAAA,uBAAoB;kCACnB,cAAA,8OAAC,qHAAA,CAAA,oBAAiB;sCAAE;;;;;;;;;;;;;;;;;;;;;;;;;;;AAMhC","debugId":null}}]
}